{"mappings":"YAQO,ICLDA,EAHS,WAGQC,MAAM,IAEvBC,EAAO,SAACC,GAAkB,IAAVC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,EACtB,MAAA,aAAAG,OAAoBL,EAApB,KAAAK,OAA8BJ,EAA9B,SCHJK,SAASC,iBAAiB,oBAAoB,WAC1C,IAAMC,EAAKF,SAASG,cAAc,UAC9BD,GACAA,EAAGD,iBAAiB,UAAU,SAACG,IFEpB,SAACA,GAIhB,GAHAA,EAAEC,iBAGwD,KAAvDD,EAAEE,OAAOH,cAAc,sBAAsBI,MAAgB,OAAO,EAQvE,IALA,IAAIC,EAAMJ,EAAEE,OAAOG,OAAOC,QAAQ,SAAU,eAGxCC,EAAO,GACPC,EAASR,EAAEE,OAAOO,iBAAiB,yBAC9BlB,EAAI,EAAGA,EAAIiB,EAAOf,OAAQF,IAC/BgB,GAAQ,IAAMC,EAAOjB,GAAGmB,KAAO,IAAMC,mBAAmBH,EAAOjB,GAAGY,OAItE,IAAIS,EAAShB,SAASiB,cAAc,UACpCD,EAAOE,IAAMV,EAAMG,EACnBX,SAASmB,KAAKC,YAAYJ,GAI1BK,OAAM,SAAa,SAASV,UAGjBU,OAAM,SACbrB,SAASmB,KAAKG,YAAYN,GAG1BhB,SAASuB,eAAe,yBAAyBC,UAAYb,EAAKc,KE/B9DC,CAAItB,MDEa,WAAwB,IAAvBuB,EAAuB/B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,MACxC+B,EAAc3B,SAASG,cAAcwB,IACzBH,UAAY,GACxBjC,EAAQqC,SAAQ,SAAAlC,GACZ,IAAIc,EAAMf,EAAKC,EAAQmC,KAAKC,MAZd,EAYoBD,KAAKE,UAA4B,GAC/DC,EAAMhC,SAASiB,cAAc,OACjCe,EAAId,IAAMV,EACVmB,EAAYP,YAAYY,MCL5BC,CAAc,eAEd,IAAMC,EAAOlC,SAASG,cAAc,eAE9BgC,EAAS,IAAIC,IAAIf,OAAOgB,UAAUC,aAClCC,EAAUC,OAAOC,YAAYN,GAuBnC,GArBII,EAAQG,YACR1C,SAASG,cAAc,QAAQwC,MAAMC,QAAU,OAC/CV,EAAKS,MAAME,SAAW,SAGH,WAAnBN,EAAQO,SACRZ,EAAKS,MAAMI,iBAAmB,+BAC9Bb,EAAKS,MAAMK,OAAS,QACpBd,EAAKS,MAAMM,UAAY,SAGJ,YAAnBV,EAAQO,SACRZ,EAAKS,MAAMI,iBAAmB,gCAC9Bb,EAAKrB,iBAAiB,OAAOe,SAAQ,SAACsB,EAAKvD,GACvCwD,QAAQC,IAAIzD,GACRA,GAAK,IACLuD,EAAIP,MAAMU,UAAY,WAK9Bd,EAAQe,OAAQ,CAChB,IAAIC,EAAIvD,SAASiB,cAAc,KAC/BsC,EAAEC,UAAYjB,EAAQe,OACtBC,EAAEE,iBAAkB,EACpBF,EAAEZ,MAAQ,CACNe,aAAc,SACdC,cAAe,KACfC,YAAa,OAEjBL,EAAEtD,iBAAiB,SAAS,WACxBkC,EAAO0B,IAAI,SAAUN,EAAEC,WAEvBM,QAAQC,aAAa,KAAM,GAAI,IAAM5B,MAErCI,EAAQyB,OACRT,EAAEZ,MAAMsB,SAAW1B,EAAQyB,KAAO,MAEtChE,SAASmB,KAAKC,YAAYmC","sources":["./src/assets/js/chimp.js","./src/assets/js/letters.js","./src/assets/js/entry.js"],"sourcesContent":["/*\n * Mailchimp AJAX form submit VanillaJS\n * Vanilla JS\n * Author: Michiel Vandewalle\n * Github author: https://github.com/michiel-vandewalle\n * Github project: https://github.com/michiel-vandewalle/Mailchimp-AJAX-form-submit-vanillaJS\n */\n\nexport const sub = (e) => {\n    e.preventDefault();\n    \n    // Check for spam\n    if(e.target.querySelector('#js-validate-robot').value !== '') { return false }\n\n    // Get url for mailchimp\n    var url = e.target.action.replace('/post?', '/post-json?');\n\n    // Add form data to object\n    var data = '';\n    var inputs = e.target.querySelectorAll('#js-form-inputs input');\n    for (var i = 0; i < inputs.length; i++) {\n        data += '&' + inputs[i].name + '=' + encodeURIComponent(inputs[i].value);\n    }\n\n    // Create & add post script to the DOM\n    var script = document.createElement('script');\n    script.src = url + data;\n    document.body.appendChild(script);\n\n    // Callback function\n    var callback = 'callback';\n    window[callback] = function(data) {\n\n        // Remove post script from the DOM\n        delete window[callback];\n        document.body.removeChild(script);\n\n        // Display response message\n        document.getElementById('js-subscribe-response').innerHTML = data.msg\n    };\n}","const string = 'hauswien';\nconst numberOfFiles = 4;\n\nconst letters = string.split('');\n\nconst file = (letter, i = 0) => {\n    return `./letters/${letter}/${i}.svg`;\n}\n\nexport const launchLetters = (gridElement = null) => {\n    gridElement = document.querySelector(gridElement);\n    gridElement.innerHTML = '';\n    letters.forEach(letter => {\n        let url = file(letter, Math.floor(Math.random() * numberOfFiles) + 1)\n        let svg = document.createElement('img');\n        svg.src = url;\n        gridElement.appendChild(svg);\n    })\n}","import { sub } from './chimp.js';\nimport { launchLetters } from './letters.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const nl = document.querySelector('#nlsub');\n    if (nl) {\n        nl.addEventListener('submit', (e) => {\n            sub(e);\n        });\n    };\n\n    launchLetters('#lettergrid');\n\n    const grid = document.querySelector('#lettergrid');\n\n    const params = new URL(window.location).searchParams;\n    const options = Object.fromEntries(params);\n\n    if (options.shareable) {\n        document.querySelector('main').style.display = 'none';\n        grid.style.maxWidth = '500px';\n    }\n\n    if (options.layout === 'square') {\n        grid.style.gridTemplateRows = 'repeat(2, minmax(50%, auto))';\n        grid.style.height = '100vw';\n        grid.style.maxHeight = '500px';\n    }\n\n    if (options.layout === 'stretch') {\n        grid.style.gridTemplateRows = 'repeat(2, minmax(50vh, auto))';\n        grid.querySelectorAll('img').forEach((img, i) => {\n            console.log(i);\n            if (i >= 4) {\n                img.style.alignSelf = 'end';\n            };\n        })\n    }\n\n    if (options.string) {\n        let p = document.createElement('p');\n        p.innerText = options.string;\n        p.contentEditable = true;\n        p.style = {\n            'text-align': 'center',\n            'line-height': 1.25,\n            'max-width': '90%',\n        }\n        p.addEventListener('input', () => {\n            params.set('string', p.innerText);\n            // window.location.search = params;\n            history.replaceState(null, '', '?' + params);\n        })\n        if (options.size) {\n            p.style.fontSize = options.size + 'px';\n        }\n        document.body.appendChild(p);\n    }\n})"],"names":["letters","split","file","letter","i","arguments","length","undefined","concat","document","addEventListener","nl","querySelector","e","preventDefault","target","value","url","action","replace","data","inputs","querySelectorAll","name","encodeURIComponent","script","createElement","src","body","appendChild","window","removeChild","getElementById","innerHTML","msg","$f9955fb06011661f5adf9b6ddc495750$export$sub","gridElement","forEach","Math","floor","random","svg","$a22be2fc29f0a462d405b16e7c8bce8d$export$launchLetters","grid","params","URL","location","searchParams","options","Object","fromEntries","shareable","style","display","maxWidth","layout","gridTemplateRows","height","maxHeight","img","console","log","alignSelf","string","p","innerText","contentEditable","text-align","line-height","max-width","set","history","replaceState","size","fontSize"],"version":3,"file":"entry.1b21cc41.js.map"}