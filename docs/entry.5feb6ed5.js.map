{"mappings":"YAQO,ICLDA,EAHS,WAGQC,MAAM,IAEvBC,EAAO,SAACC,GAAkB,IAAVC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,EACtB,MAAA,aAAAG,OAAoBL,EAApB,KAAAK,OAA8BJ,EAA9B,SAGSK,EAAgB,WAAsC,IAArCC,EAAqCL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvB,KAAMM,EAAiBN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,EACrDO,EAAkB,GAClBC,EAAc,EAalB,IAZAH,EAAcI,SAASC,cAAcL,IACzBM,UAAY,GACxBhB,EAAQiB,SAAQ,SAAAd,GACZ,IAAIe,EAAMhB,EAAKC,EAAQgB,KAAKC,MAdd,EAcoBD,KAAKE,UAA4B,GAC/DC,EAAMR,SAASS,cAAc,OACjCD,EAAIE,IAAMN,EACLP,EAGDC,EAAgBa,KAAKH,GAFrBZ,EAAYgB,YAAYJ,MAK5BX,EACA,IAAIgB,EAAcC,aAAY,WAAOC,MAAclB,GAE7CkB,EAAY,WACVhB,GAAeD,EAAgBN,QAC/BwB,cAAcH,GACdlB,EAAc,cAAeE,GAC7BE,EAAc,IAEdH,EAAYgB,YAAYd,EAAgBC,IACxCA,OC/BhBC,SAASiB,iBAAiB,oBAAoB,WAC1C,IAAMC,EAAKlB,SAASC,cAAc,UAC9BiB,GACAA,EAAGD,iBAAiB,UAAU,SAACE,IFEpB,SAACA,GAIhB,GAHAA,EAAEC,iBAGwD,KAAvDD,EAAEE,OAAOpB,cAAc,sBAAsBqB,MAAgB,OAAO,EAQvE,IALA,IAAIlB,EAAMe,EAAEE,OAAOE,OAAOC,QAAQ,SAAU,eAGxCC,EAAO,GACPC,EAASP,EAAEE,OAAOM,iBAAiB,yBAC9BrC,EAAI,EAAGA,EAAIoC,EAAOlC,OAAQF,IAC/BmC,GAAQ,IAAMC,EAAOpC,GAAGsC,KAAO,IAAMC,mBAAmBH,EAAOpC,GAAGgC,OAItE,IAAIQ,EAAS9B,SAASS,cAAc,UACpCqB,EAAOpB,IAAMN,EAAMqB,EACnBzB,SAAS+B,KAAKnB,YAAYkB,GAI1BE,OAAM,SAAa,SAASP,UAGjBO,OAAM,SACbhC,SAAS+B,KAAKE,YAAYH,GAG1B9B,SAASkC,eAAe,yBAAyBhC,UAAYuB,EAAKU,KE/B9DC,CAAIjB,MAIZ,IAAMkB,EAAOrC,SAASC,cAAc,eAE9BqC,EAAS,IAAIC,IAAIP,OAAOQ,UAAUC,aAClCC,EAAUC,OAAOC,YAAYN,GA+BnC,GA7BAO,EAAc,cAAeH,EAAQ7C,UAEjC6C,EAAQI,YACR9C,SAASC,cAAc,QAAQ8C,MAAMC,QAAU,QAG/CN,EAAQO,OACRC,QAAQC,IAAI,UACZrC,aAAY,WAAO+B,EAAc,iBAAiBH,EAAQO,OAGvC,WAAnBP,EAAQU,SACRf,EAAKU,MAAMM,iBAAmB,+BAC9BhB,EAAKU,MAAMO,OAAS,QACpBjB,EAAKU,MAAMQ,SAAW,QACtBlB,EAAKU,MAAMS,UAAY,SAGJ,YAAnBd,EAAQU,SACRf,EAAKU,MAAMM,iBAAmB,gCAC9BhB,EAAKU,MAAMQ,SAAW,QACtBlB,EAAKV,iBAAiB,OAAOxB,SAAQ,SAACsD,EAAKnE,GACvC4D,QAAQC,IAAI7D,GACRA,GAAK,IACLmE,EAAIV,MAAMW,UAAY,WAK9BhB,EAAQiB,OAAQ,CAChB,IAAIC,EAAI5D,SAASS,cAAc,KAC/BmD,EAAEC,UAAYnB,EAAQiB,OACtBC,EAAEE,iBAAkB,EACpBF,EAAEb,MAAQ,CACNgB,aAAc,SACdC,cAAe,KACfC,YAAa,OAEjBL,EAAE3C,iBAAiB,SAAS,WACxBqB,EAAO4B,IAAI,SAAUN,EAAEC,WAEvBM,QAAQC,aAAa,KAAM,GAAI,IAAM9B,MAErCI,EAAQ2B,OACRT,EAAEb,MAAMuB,SAAW5B,EAAQ2B,KAAO,MAEtCrE,SAAS+B,KAAKnB,YAAYgD","sources":["./src/assets/js/chimp.js","./src/assets/js/letters.js","./src/assets/js/entry.js"],"sourcesContent":["/*\n * Mailchimp AJAX form submit VanillaJS\n * Vanilla JS\n * Author: Michiel Vandewalle\n * Github author: https://github.com/michiel-vandewalle\n * Github project: https://github.com/michiel-vandewalle/Mailchimp-AJAX-form-submit-vanillaJS\n */\n\nexport const sub = (e) => {\n    e.preventDefault();\n    \n    // Check for spam\n    if(e.target.querySelector('#js-validate-robot').value !== '') { return false }\n\n    // Get url for mailchimp\n    var url = e.target.action.replace('/post?', '/post-json?');\n\n    // Add form data to object\n    var data = '';\n    var inputs = e.target.querySelectorAll('#js-form-inputs input');\n    for (var i = 0; i < inputs.length; i++) {\n        data += '&' + inputs[i].name + '=' + encodeURIComponent(inputs[i].value);\n    }\n\n    // Create & add post script to the DOM\n    var script = document.createElement('script');\n    script.src = url + data;\n    document.body.appendChild(script);\n\n    // Callback function\n    var callback = 'callback';\n    window[callback] = function(data) {\n\n        // Remove post script from the DOM\n        delete window[callback];\n        document.body.removeChild(script);\n\n        // Display response message\n        document.getElementById('js-subscribe-response').innerHTML = data.msg\n    };\n}","const string = 'hauswien';\nconst numberOfFiles = 4;\n\nconst letters = string.split('');\n\nconst file = (letter, i = 0) => {\n    return `./letters/${letter}/${i}.svg`;\n}\n\nexport const launchLetters = (gridElement = null, interval = 0) => {\n    let objectsToAppend = [];\n    let appendIndex = 0;\n    gridElement = document.querySelector(gridElement);\n    gridElement.innerHTML = '';\n    letters.forEach(letter => {\n        let url = file(letter, Math.floor(Math.random() * numberOfFiles) + 1)\n        let svg = document.createElement('img');\n        svg.src = url;\n        if (!interval) {\n            gridElement.appendChild(svg);\n        } else {\n            objectsToAppend.push(svg);\n        }\n    })\n    if (interval) {\n        let intervalVar = setInterval(() => {appendSvg()}, interval);\n\n        const appendSvg = () => {\n            if (appendIndex >= objectsToAppend.length) {\n                clearInterval(intervalVar);\n                launchLetters('#lettergrid', interval);\n                appendIndex = 0;\n            } else {\n                gridElement.appendChild(objectsToAppend[appendIndex]);\n                appendIndex++;\n            }\n        }\n    }\n}","import { sub } from './chimp.js';\nimport { launchLetters } from './letters.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const nl = document.querySelector('#nlsub');\n    if (nl) {\n        nl.addEventListener('submit', (e) => {\n            sub(e);\n        });\n    };\n\n    const grid = document.querySelector('#lettergrid');\n\n    const params = new URL(window.location).searchParams;\n    const options = Object.fromEntries(params);\n\n    launchLetters('#lettergrid', options.interval);\n\n    if (options.shareable) {\n        document.querySelector('main').style.display = 'none';\n    }\n\n    if (options.loop) {\n        console.log('loopin');\n        setInterval(() => {launchLetters('#lettergrid')}, options.loop);\n    }\n\n    if (options.layout === 'square') {\n        grid.style.gridTemplateRows = 'repeat(2, minmax(50%, auto))';\n        grid.style.height = '100vw';\n        grid.style.maxWidth = '500px';\n        grid.style.maxHeight = '500px';\n    }\n\n    if (options.layout === 'stretch') {\n        grid.style.gridTemplateRows = 'repeat(2, minmax(50vh, auto))';\n        grid.style.maxWidth = '500px';\n        grid.querySelectorAll('img').forEach((img, i) => {\n            console.log(i);\n            if (i >= 4) {\n                img.style.alignSelf = 'end';\n            };\n        })\n    }\n\n    if (options.string) {\n        let p = document.createElement('p');\n        p.innerText = options.string;\n        p.contentEditable = true;\n        p.style = {\n            'text-align': 'center',\n            'line-height': 1.25,\n            'max-width': '90%',\n        }\n        p.addEventListener('input', () => {\n            params.set('string', p.innerText);\n            // window.location.search = params;\n            history.replaceState(null, '', '?' + params);\n        })\n        if (options.size) {\n            p.style.fontSize = options.size + 'px';\n        }\n        document.body.appendChild(p);\n    }\n})"],"names":["letters","split","file","letter","i","arguments","length","undefined","concat","launchLetters","gridElement","interval","objectsToAppend","appendIndex","document","querySelector","innerHTML","forEach","url","Math","floor","random","svg","createElement","src","push","appendChild","intervalVar","setInterval","appendSvg","clearInterval","addEventListener","nl","e","preventDefault","target","value","action","replace","data","inputs","querySelectorAll","name","encodeURIComponent","script","body","window","removeChild","getElementById","msg","$f9955fb06011661f5adf9b6ddc495750$export$sub","grid","params","URL","location","searchParams","options","Object","fromEntries","$a22be2fc29f0a462d405b16e7c8bce8d$export$launchLetters","shareable","style","display","loop","console","log","layout","gridTemplateRows","height","maxWidth","maxHeight","img","alignSelf","string","p","innerText","contentEditable","text-align","line-height","max-width","set","history","replaceState","size","fontSize"],"version":3,"file":"entry.5feb6ed5.js.map"}